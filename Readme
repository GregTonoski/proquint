
                              Proquints:
                    Identifiers that are Readable,
                     Spellable, and Pronounceable

                         Daniel S. Wilkerson

9 January 2009: initial release
8 April 2012: Java implementation
30 December 2015: Javascript implementation by Luděk Rašek
3 October 2017: Python implementation by Ruslan Shestopalyuk

Welcome!

Please see the article on proquints: http://arXiv.org/html/0901.4016;
A local copy is in proquint-proposal.txt and this can be converted to
proquint-proposal.gen.html by typing "make".

C implementation: proquint.c converts between proquint, hex, and
decimal strings.

Java implementation: Proquint.java converts between proquint, hex, and
decimal strings.

Elixir implemenation: Converts binaries to proquint encoded strings, 
Decodes proquint encode strings to binaries. Implementation can be found
at https://hexdocs.pm/proquint/Proquint.html

Run "make clean all check" to build and check everything.  After that
you can run "make demo" for a simple demo and "make examples" for more
examples.

Javascript implementation: The code is in js/proquint.js. 
Try it in js/proquint.html for values of arbitrary length.
Demo is accessible as github page: 
http://l-ra.github.io/proquint/js/proquint.html

See License.txt for copyright and terms of use.

The proquint home is http://github.com/dsw/proquint.
Fork with Javascript implementation is https://github.com/l-ra/proquint.

Enjoy.

  -- Daniel

